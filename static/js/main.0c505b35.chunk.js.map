{"version":3,"sources":["components/Header/index.js","components/EmployeeList/randomUserAPI.js","components/Employee/index.js","components/StateSelect/index.js","components/SortButton/index.js","components/EmployeeList/index.js","App.js","index.js"],"names":["Header","className","count","a","apiURL","fetch","then","response","json","users","results","map","user","firstName","name","first","lastName","last","state","location","email","phone","id","login","uuid","randomUsers","Employee","props","data","StateSelect","stateList","forEach","employee","includes","push","sort","unshift","onChange","changeFunction","SortButton","style","width","onClick","disabled","sortOrder","renderArrow","EmployeeList","sortByName","event","preventDefault","sorted","employees","b","nameA","toUpperCase","nameB","newSortOrder","nameSortOrder","reverse","setState","stateSortOrder","sortByState","stateA","stateB","handleStateFilter","filtered","target","value","stateFilter","stateSortEnabled","this","scope","filter","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c505b35.chunk.js","sourcesContent":["import \"./style.css\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"jumbotron directory-head\">\r\n      <h1 className=\"text-center\">Employee Directory</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","/* Returns an array of random user data */\r\nasync function randomUsers(count) {\r\n  const apiURL = \"https://randomuser.me/api/?nat=us&results=\" + count;\r\n  const users = await fetch(apiURL)\r\n    .then(response => response.json())\r\n    .then(users => users.results.map(user => {\r\n      return {\r\n        firstName: user.name.first,\r\n        lastName: user.name.last,\r\n        state: user.location.state,\r\n        email: user.email,\r\n        phone: user.phone,\r\n        id: user.login.uuid\r\n      }\r\n    }\r\n    ));\r\n\r\n  return users;\r\n}\r\n\r\nexport default randomUsers;\r\n\r\n","function Employee(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.data.lastName}, {props.data.firstName}</td>\r\n      <td>{props.data.state}</td>\r\n      <td>{props.data.email}</td>\r\n      <td>{props.data.phone}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Employee;","function StateSelect(props) {\r\n  let stateList = [];\r\n\r\n  props.data.forEach(employee => {\r\n    if (!stateList.includes(employee.state)) {\r\n      stateList.push(employee.state);\r\n    }\r\n  });\r\n\r\n  stateList.sort();\r\n  stateList.unshift(\"All\");\r\n\r\n  return (\r\n    <select className=\"custom-select custom-select-sm\" onChange={props.changeFunction}>\r\n      {stateList.map(state => (\r\n        <option key={state}>{state}</option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default StateSelect;","function SortButton(props) {\r\n\r\n  const renderArrow = sortOrder => {\r\n    switch (props.sortOrder) {\r\n      case \"Forward\": return \"↓\";\r\n      case \"Reverse\": return \"↑\";\r\n      default: return \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button className=\"btn btn-sm btn-secondary mr-2\" style={{ width: \"3.5rem\" }} onClick={props.onClick} disabled={props.disabled}>\r\n      Sort {renderArrow(props.sortOrder)}\r\n    </button>\r\n  );\r\n}\r\n\r\n\r\nexport default SortButton;","import React from \"react\"\r\nimport randomUsers from \"./randomUserAPI\"\r\nimport Employee from \"../Employee\"\r\nimport StateSelect from \"../StateSelect\"\r\nimport SortButton from \"../SortButton\"\r\nimport \"./style.css\"\r\n\r\nclass EmployeeList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: props.count,\r\n      employees: [],\r\n      nameSortOrder: \"None\",\r\n      stateSortOrder: \"None\",\r\n      stateSortEnabled: true\r\n    };\r\n  }\r\n\r\n  /* Construct the list of employees on component mount */\r\n  componentDidMount() {\r\n    randomUsers(this.state.count)\r\n      .then(users => {\r\n        this.setState({ employees: users });\r\n      });\r\n  }\r\n\r\n  /* Sorts the employee list by last name */\r\n  sortByName = (event) => {\r\n    event.preventDefault();\r\n\r\n    const sorted = this.state.employees.sort((a, b) => {\r\n      let nameA = a.lastName.toUpperCase();\r\n      let nameB = b.lastName.toUpperCase();\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n    let newSortOrder = \"Forward\";\r\n\r\n    /* Toggles sort order if used several times */\r\n    if (this.state.nameSortOrder === \"Forward\") {\r\n      newSortOrder = \"Reverse\";\r\n      sorted.reverse();\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        employees: sorted,\r\n        nameSortOrder: newSortOrder,\r\n        stateSortOrder: \"None\"\r\n      }\r\n    );\r\n  }\r\n\r\n  /* Sorts the employee list by state */\r\n  sortByState = (event) => {\r\n    event.preventDefault();\r\n    const sorted = this.state.employees.sort((a, b) => {\r\n      let stateA = a.state.toUpperCase();\r\n      let stateB = b.state.toUpperCase();\r\n      if (stateA < stateB) {\r\n        return -1;\r\n      }\r\n      if (stateA > stateB) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n    let newSortOrder = \"Forward\";\r\n\r\n    /* Toggles sort order if used several times */\r\n    if (this.state.stateSortOrder === \"Forward\") {\r\n      newSortOrder = \"Reverse\";\r\n      sorted.reverse();\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        employees: sorted,\r\n        stateSortOrder: newSortOrder,\r\n        nameSortOrder: \"None\"\r\n      }\r\n    );\r\n  }\r\n\r\n  /* Sets the filtered state on employees based on whether they match the specified state */\r\n  handleStateFilter = (event) => {\r\n    const filtered = [...this.state.employees];\r\n\r\n    if (event.target.value !== \"All\") {\r\n      filtered.forEach(employee => {\r\n        employee.filtered = employee.state !== event.target.value;\r\n      });\r\n    } else {\r\n      filtered.forEach(employee => {\r\n        employee.filtered = false;\r\n      });\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        employees: filtered,\r\n        stateFilter: event.target.value,\r\n        stateSortEnabled: event.target.value === \"All\"\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"container\">\r\n        <table className=\"table custom-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">\r\n                <form className=\"form-inline\">\r\n                  <label className=\"mr-2\">Name</label>\r\n                  <SortButton onClick={this.sortByName} disabled={false} sortOrder={this.state.nameSortOrder} />\r\n                </form>\r\n              </th>\r\n              <th scope=\"col\">\r\n                <form className=\"form-inline\">\r\n                  <label className=\"mr-2\">State</label>\r\n                  <SortButton onClick={this.sortByState} disabled={!this.state.stateSortEnabled} sortOrder={this.state.stateSortOrder} />\r\n                  <StateSelect data={this.state.employees} changeFunction={this.handleStateFilter} />\r\n                </form>\r\n              </th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Phone</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.employees\r\n              .filter(employee => !employee.filtered)\r\n              .map(employee => (\r\n                <Employee key={employee.id} data={employee} />\r\n              ))\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeList;","import Header from \"./components/Header\"\nimport EmployeeList from \"./components/EmployeeList\"\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <EmployeeList count={20} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
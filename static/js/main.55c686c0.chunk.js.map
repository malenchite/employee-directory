{"version":3,"sources":["components/Header/index.js","utils/randomUserAPI.js","components/Employee/index.js","components/StateSelect/index.js","components/SortHeader/index.js","components/EmployeeList/index.js","App.js","index.js"],"names":["Header","className","randomUsers","count","fetch","then","response","json","users","results","map","user","firstName","name","first","lastName","last","state","location","email","phone","id","login","uuid","catch","err","console","log","Employee","props","data","StateSelect","stateList","forEach","employee","includes","push","sort","unshift","onChange","changeFunction","SortButton","style","display","label","width","onClick","clickFunction","disabled","sortType","sortOrder","renderArrow","EmployeeList","employees","stateFilter","nameFilter","sortFunction","a","b","setSort","type","setState","sortByName","event","preventDefault","nameA","toUpperCase","nameB","sortByState","stateA","stateB","handleFormChange","target","value","trim","checkFilter","filtered","startsWith","randomUserAPI","this","scope","autocomplete","SortHeader","placeholder","filter","empA","empB","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55c686c0.chunk.js","sourcesContent":["import \"./style.css\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"jumbotron directory-head\">\r\n      <h1 className=\"text-center\">Random Inc.</h1>\r\n      <h3 className=\"text-center\">Employee Directory</h3>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","/* Returns an array of random user data */\r\nfunction randomUsers(count) {\r\n  const apiURL = \"https://randomuser.me/api/?nat=us&results=\" + count;\r\n  return fetch(apiURL)\r\n    .then(response => response.json())\r\n    .then(users => users.results.map(user => {\r\n      return {\r\n        firstName: user.name.first,\r\n        lastName: user.name.last,\r\n        state: user.location.state,\r\n        email: user.email,\r\n        phone: user.phone,\r\n        id: user.login.uuid\r\n      }\r\n    }))\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport default randomUsers;\r\n\r\n","function Employee(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.data.lastName}, {props.data.firstName}</td>\r\n      <td>{props.data.state}</td>\r\n      <td>{props.data.email}</td>\r\n      <td>{props.data.phone}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Employee;","function StateSelect(props) {\r\n  let stateList = [];\r\n\r\n  props.data.forEach(employee => {\r\n    if (!stateList.includes(employee.state)) {\r\n      stateList.push(employee.state);\r\n    }\r\n  });\r\n\r\n  stateList.sort();\r\n  stateList.unshift(\"All\");\r\n\r\n  return (\r\n    <select className=\"custom-select custom-select-sm\" name={props.name} onChange={props.changeFunction}>\r\n      {stateList.map(state => (\r\n        <option key={state}>{state}</option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default StateSelect;","function SortButton(props) {\r\n\r\n  const renderArrow = () => {\r\n    const sortOrder = props.label === props.sortType ? props.sortOrder : \"None\";\r\n    switch (sortOrder) {\r\n      case \"Forward\": return \"↓\";\r\n      case \"Reverse\": return \"↑\";\r\n      default: return \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <label className=\"mr-2\" style={{ display: \"inline-block\" }}>{props.label}</label>\r\n      <button className=\"btn btn-sm btn-secondary mr-2\" style={{ width: \"3.5rem\" }} onClick={props.clickFunction} disabled={props.disabled}>\r\n        Sort {renderArrow()}\r\n      </button>\r\n    </span>\r\n  );\r\n}\r\n\r\n\r\nexport default SortButton;","import React from \"react\"\r\nimport randomUserAPI from \"../../utils/randomUserAPI\"\r\nimport Employee from \"../Employee\"\r\nimport StateSelect from \"../StateSelect\"\r\nimport SortHeader from \"../SortHeader\"\r\nimport \"./style.css\"\r\n\r\nclass EmployeeList extends React.Component {\r\n  state = {\r\n    employees: [],\r\n    sortOrder: \"None\",\r\n    stateFilter: \"All\",\r\n    nameFilter: \"\",\r\n    sortType: \"None\",\r\n    sortFunction: (a, b) => 0\r\n  }\r\n\r\n  /* Construct the list of employees on component mount */\r\n  componentDidMount() {\r\n    randomUserAPI(this.props.count)\r\n      .then(users => {\r\n        this.setState({ employees: users });\r\n      });\r\n  }\r\n\r\n  /* Sets sort type and function */\r\n  setSort = (type, sortFunction) => {\r\n    let sortOrder = \"Forward\";\r\n\r\n    // Reverses order if called again with same type\r\n    if (this.state.sortType === type && this.state.sortOrder === \"Forward\") {\r\n      sortOrder = \"Reverse\";\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        sortOrder,\r\n        sortType: type,\r\n        sortFunction\r\n      }\r\n    );\r\n  }\r\n\r\n  /* Sets sorting to use last name */\r\n  sortByName = event => {\r\n    event.preventDefault();\r\n\r\n    const sortFunction = (a, b) => {\r\n      let nameA = a.lastName.toUpperCase();\r\n      let nameB = b.lastName.toUpperCase();\r\n      if (nameA < nameB) {\r\n        return this.state.sortOrder === \"Reverse\" ? 1 : -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return this.state.sortOrder === \"Reverse\" ? -1 : 1;\r\n      }\r\n\r\n      return 0;\r\n    };\r\n\r\n    this.setSort(\"Name\", sortFunction);\r\n  }\r\n\r\n  /* Sets sorting to use employee state */\r\n  sortByState = event => {\r\n    event.preventDefault();\r\n\r\n    const sortFunction = (a, b) => {\r\n      let stateA = a.state.toUpperCase();\r\n      let stateB = b.state.toUpperCase();\r\n      if (stateA < stateB) {\r\n        return this.state.sortOrder === \"Reverse\" ? 1 : -1;\r\n      }\r\n      if (stateA > stateB) {\r\n        return this.state.sortOrder === \"Reverse\" ? -1 : 1;\r\n      }\r\n\r\n      return 0;\r\n    };\r\n\r\n    this.setSort(\"State\", sortFunction);\r\n  }\r\n\r\n  /* Handles form value change by updating state */\r\n  handleFormChange = (event) => {\r\n    this.setState(\r\n      {\r\n        [event.target.name]: event.target.value.trim()\r\n      }\r\n    );\r\n  }\r\n\r\n  /* Checks the filter on an employee based on whether they match the current criteria */\r\n  checkFilter = employee => {\r\n    let filtered;\r\n\r\n    /* Filter based on state */\r\n    filtered = this.state.stateFilter !== \"All\" && employee.state !== this.state.stateFilter;\r\n\r\n    /* Filter based on name */\r\n    filtered |= !(employee.firstName.toUpperCase().startsWith(this.state.nameFilter.toUpperCase())\r\n      || employee.lastName.toUpperCase().startsWith(this.state.nameFilter.toUpperCase()));\r\n\r\n    return !filtered;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"container\">\r\n        <table className=\"table custom-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">\r\n                <form className=\"form-inline\" autocomplete=\"off\">\r\n                  <SortHeader\r\n                    label=\"Name\"\r\n                    clickFunction={this.sortByName}\r\n                    disabled={false}\r\n                    sortType={this.state.sortType}\r\n                    sortOrder={this.state.sortOrder}\r\n                  />\r\n                  <input className=\"form-control form-control-sm\" name=\"nameFilter\" placeholder=\"Filter\" onChange={this.handleFormChange} />\r\n                </form>\r\n              </th>\r\n              <th scope=\"col\">\r\n                <form className=\"form-inline\">\r\n                  <SortHeader\r\n                    label=\"State\"\r\n                    clickFunction={this.sortByState}\r\n                    disabled={this.state.stateFilter !== \"All\"}\r\n                    sortType={this.state.sortType}\r\n                    sortOrder={this.state.sortOrder}\r\n                  />\r\n                  <StateSelect data={this.state.employees} name=\"stateFilter\" changeFunction={this.handleFormChange} />\r\n                </form>\r\n              </th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Phone</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              this.state.employees\r\n                .filter(employee => this.checkFilter(employee))\r\n                .sort((empA, empB) => this.state.sortFunction(empA, empB))\r\n                .map(employee => (\r\n                  <Employee key={employee.id} data={employee} />\r\n                ))\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeList;","import Header from \"./components/Header\"\nimport EmployeeList from \"./components/EmployeeList\"\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <EmployeeList count={20} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}